{
  "_args": [
    [
      {
        "raw": "express-layout",
        "scope": null,
        "escapedName": "express-layout",
        "name": "express-layout",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/elizabethvance/Desktop/prs/node-test"
    ]
  ],
  "_from": "express-layout@latest",
  "_id": "express-layout@0.1.0",
  "_inCache": true,
  "_location": "/express-layout",
  "_npmUser": {
    "name": "mlmorg",
    "email": "matt@mlmorg.com"
  },
  "_npmVersion": "1.3.14",
  "_phantomChildren": {},
  "_requested": {
    "raw": "express-layout",
    "scope": null,
    "escapedName": "express-layout",
    "name": "express-layout",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/express-layout/-/express-layout-0.1.0.tgz",
  "_shasum": "83276f2443b6ed01101b2974dcdd1a75d5a59806",
  "_shrinkwrap": null,
  "_spec": "express-layout",
  "_where": "/Users/elizabethvance/Desktop/prs/node-test",
  "author": {
    "name": "Matt Morgan",
    "email": "matt@mlmorg.com",
    "url": "http://mlmorg.com"
  },
  "bugs": {
    "url": "https://github.com/uber/express-layout/issues"
  },
  "dependencies": {
    "obj-extend": "~0.1.0"
  },
  "description": "Adds layout support to Express",
  "devDependencies": {
    "chai": "~1.8.1",
    "express": "~3.4.4",
    "grunt": "~0.4.1",
    "grunt-cli": "~0.1.11",
    "grunt-contrib-jshint": "~0.7.2",
    "jade": "~0.35.0",
    "mocha": "~1.14.0",
    "request": "~2.27.0"
  },
  "directories": {},
  "dist": {
    "shasum": "83276f2443b6ed01101b2974dcdd1a75d5a59806",
    "tarball": "https://registry.npmjs.org/express-layout/-/express-layout-0.1.0.tgz"
  },
  "homepage": "https://github.com/uber/express-layout",
  "keywords": [
    "express",
    "layout"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/uber/express-layout/blob/master/LICENSE"
    }
  ],
  "main": "lib/express-layout",
  "maintainers": [
    {
      "name": "mlmorg",
      "email": "matt@mlmorg.com"
    }
  ],
  "name": "express-layout",
  "optionalDependencies": {},
  "readme": "# express-layout\n\nAdds layout support to Express\n\n## Installation\n\n``` bash\nnpm install express-layout\n```\n\n## Usage\n\nExpress-layout is a middleware that overrides the standard `res.render()`\nmethod. Initialize it with:\n\n``` js\nvar express = require('express'),\n    layout = require('express-layout'),\n    app = express();\n\napp.use(layout());\n```\n\nBy default, `res.render()` will render the view and pass the string of html\nas a `body` variable to a file named `layout` in the views folder. You can\nalter the layout used by passing an option. For example:\n\n``` js\nres.render('hello-world', { layout: 'alternative' });\n```\n\nIf you pass `false`, the view will not render within a layout.\n\nYou can set a global default layout name and/or directory in which to search\nfor layout files. These can be set by passing an options hash to the middleware\non instantiation (`layout` and `layouts` are the keys, respectively). \nAlternatively, you can set them using Express' built-in global settings:\n\n``` js\napp.set('layouts', './views/layouts');\napp.set('layout', 'default');\n```\n\nFinally, an example template in jade might look like this:\n\n``` jade\ndoctype 5\nhtml(lang=\"en\")\n  head\n    title Hello\n  body!= body\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/uber/express-layout.git"
  },
  "scripts": {
    "test": "grunt && mocha -R spec"
  },
  "version": "0.1.0"
}
